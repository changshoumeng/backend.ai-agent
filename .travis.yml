language: python
cache: pip
addons:
  postgresql: "9.6"
services:
  - docker
  - postgresql
  - redis-server

# stage decl.
stages:
  - name: test
  - name: deploy
    if: tag IS present

# build matrix for test stage
python:
  - "3.6"
os:
  - linux
env:
  global:
    - BACKEND_ETCD_ADDR=localhost:2379
    - BACKEND_NAMESPACE=local
    - BACKEND_REDIS_ADDR=localhost:6379
    - BACKEND_DB_ADDR=localhost:5432
    - BACKEND_DB_USER=postgres
    - BACKEND_DB_PASSWORD=develove
    - BACKEND_DB_NAME=testing

# stage def.
jobs:
  include:

    - stage: test
      install:
        - sudo apt-get install libsnappy-dev
        - pip install -U pip setuptools
        - if [[ $TRAVIS_BRANCH == "develop" ]]; then BRANCH="develop"; else BRANCH="master"; fi
        - sed -i'' -e "s/{BRANCH}/$BRANCH/g" requirements-ci.txt
        - pip install -U -r requirements-ci.txt
        # install backend.ai-manager from github
        - cd ${HOME}/build/lablup 
        - git clone https://github.com/lablup/backend.ai-manager.git 
        - cd backend.ai-manager 
        - pip install -U -e . 
        # fill postgresql db with test data
        - psql -c 'CREATE DATABASE testing;' -U postgres
        - cp alembic.ini.sample alembic.ini
        - sed -i'' -e 's!^sqlalchemy.url = .*$!sqlalchemy.url = postgresql://postgres@localhost:5432/testing!' alembic.ini
        - python -m ai.backend.manager.cli schema oneshot head
        - python -m ai.backend.manager.cli fixture populate example_keypair
        - cd ../backend.ai-agent 
      before_script:
        # load etcd server
        - mkdir -p /tmp/etcd
        - mkdir -p /tmp/etcd/vroot
        - docker run -d -p 2379:2379 -p 2380:2380 --name backendai-etcd
           -v /tmp/etcd:/etcd-data
           quay.io/coreos/etcd:v3.2.8
           /usr/local/bin/etcd
           --name backendai-etcd
           --data-dir /etcd-data
           --listen-client-urls http://0.0.0.0:2379
           --advertise-client-urls http://0.0.0.0:2379
           --listen-peer-urls http://0.0.0.0:2380
           --initial-advertise-peer-urls http://0.0.0.0:2380
           --initial-cluster backendai-etcd=http://0.0.0.0:2380
           --initial-cluster-token backendai-etcd-token
           --initial-cluster-state new
           --auto-compaction-retention 1
        - docker exec -it backendai-etcd ash -c
           'ETCDCTL_API=3 etcdctl put /sorna/local/volumes/_vfroot /tmp/etcd/vroot'
        # load backend.ai-manager server
        - python -m ai.backend.gateway.server
           --etcd-addr ${BACKEND_ETCD_ADDR}
           --namespace local
           --redis-addr ${BACKEND_REDIS_ADDR}
           --db-addr ${BACKEND_DB_ADDR}
           --db-name ${BACKEND_DB_NAME}
           --db-user ${BACKEND_DB_USER}
           --db-password ${BACKEND_DB_PASSWORD}
           --docker-registry docker.example.com:5000
           --service-ip 127.0.0.1
           --service-port 5001
           --events-port 5002 &
      script:
        - python -m flake8 ai/backend tests
        - python -m pytest --cov=ai/backend
      after_success:
        - codecov

    - stage: deploy
      python: "3.6"
      install: skip
      script: skip
      deploy:
        on:
          tags: true
        provider: pypi
        distributions: sdist bdist_wheel
        skip_upload_docs: true
        user: lablup
        password:
          secure: "dauLot/g37MaxO6EqS1pEwejvK9YBmdtmzj9q68B3V6Dj0X/4poC4kG4RM0yjVzTrsPX/cUdkrw1QxK7Dw/716X+4bdOofQl/GJoFyuJXe971nPgf/JIvKOTDyGL1Y4Ur8lqBNKaYu5G9IfJqbiYzmMJXcqat1C+dQmmVTd8sK5Jt1/gfAtnl7T/KQr6qehx2SZ7o7RwhMmuuXtVeq/kvxxzppKfMV8Ap5lejg5qzFlPm8mp5Nqe6WNM9BwiiuaXYtAoxb5LaKJg8cwl7kqaONuW30+C9KEwkkLdz18EM9hhw4C62FgpjPhOmKcMOWLu3WgPTD8ggkdUZ9iYq9EbSHJmBMKEUvdemxnocKCHAGnYAghW9Jh2d3Mcrx1PYZqlD3ZQuNTm4++BnlhBZfGDnf9//uD03ISe/RINTt+FhpLIx4MxUlrqcTvyzwodXQU27NnDArKPh1wgvk3qGUTtgHvSFrZt2wccGM89qLCe+LMWF2IV3bFataoDMmjDkQQF6YuB23ghL6UhEYKUIMcX63oMVhkmm7WSwhiWJe2MvAoa+3nrqQTTeQmINLlFLxbTewg5MCLwfRO5iu1IVjrSPTmB5yeWSE6UUNGmRHE43U11F/iP0cGNNymydbX3slRm6IAp2np3ZQ8sDhKJXlmv9M9/QHmlXT+b0+XaMXaP88g="

notifications:
  webhooks:
    secure: "TT5qgI/QCVuBHmBgI89i9krQGY6scCk8138jBtPGVORj6yHx8pljk3ROJ/EwxxY560ywiWqtxak8SpfO5JwmBqG35cO7OAQMSPhCdtTKL2E25EalJs8MXlzmPm8S7hp4eAUUeBFscH7KzBm824ncvxWFU3FuAk0ZrTGmCeUn4XFjL3TYkfjrE0Oe6TqZUr1tpVh7yk7StEJFjun5uzVCG6uRWjvlbNnULmJEU3Yf0W7u8/cBYqqVOkOCuVKIZKZexuUDT7Tm39XKyacHFcJ4TCzeBo5kYRusudoHHVfWThE4cevtUvWN9HjuGBpF5RXTHESd/nu7P+Wcb9Zgk1+WyeAO1S3v0c/+FYdcmUculGjNtrTSvzrs6F7HWIkn5fuFuuj0b7oLh/lHu3j75Qqr0CPNkTFLhQIwpOR/aWjPeKg0XIQCFGaCSuJqh9Sw5QSBqoBDNwU6+TW8Bq98519B41oWFO1pKD3VvNcy1HANVror1KgqNoJj9K35lonXVsl5384JMRQCO0hH1GIZWY9Nk2ljq+VT5PGOai5qQ7KKRCE7lIJwjGIxwdrBlDzepMvUL8dHtZfANTTZ8SiqSQ+woAR9iRZlKw2jyyJ/hdzhtXtcnANU5hDSRrsV8Q7nxpM9BJBROZnKMIG0z+oUoDQ5KFbDJHRWeL7H9zTuw+V//ZQ="
